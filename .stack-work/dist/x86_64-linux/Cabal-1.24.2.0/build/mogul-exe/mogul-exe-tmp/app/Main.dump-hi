
==================== FINAL INTERFACE ====================
2017-08-27 02:37:03.750431 UTC

interface main@main:Main 8002
  interface hash: ac0b6e028f45d91e35be7f76684b309f
  ABI hash: 795205980e2a84e10a90371226a10ed1
  export-list hash: 235a766ad14e72d384a5358bfee86a41
  orphan hash: 6f28695276c7a0cdd81d954c8548fdb1
  flag hash: c94a97eafacc632152fc290add271efa
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      mogul-0.1.0.0@mogul-0.1.0.0-KefmOzrHo5AJyqeBDcMSes
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      parsec3-1.0.1.8@parsec3-1.0.1.8-14vgj7YahKy4ZG7Rj9NfiD
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  mogul-0.1.0.0@mogul-0.1.0.0-KefmOzrHo5AJyqeBDcMSes:Parser 956536704f0eaa37959d2b64f8475a65
import  -/  parsec3-1.0.1.8@parsec3-1.0.1.8-14vgj7YahKy4ZG7Rj9NfiD:Text.Parsec c4337ffc8ab6ef3e8d4b36dd8ac92a71
import  -/  parsec3-1.0.1.8@parsec3-1.0.1.8-14vgj7YahKy4ZG7Rj9NfiD:Text.Parsec.Prim 70ae125d97e80ca3a90c5cbd5d021bde
8445b03288c972ce1a5edfad91c5e8e6
  $s$fStreamByteStringmChar ::
    Text.Parsec.Prim.Stream
      Data.ByteString.Internal.ByteString
      Data.Functor.Identity.Identity
      GHC.Types.Char
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Data.ByteString.Internal.ByteString
                  @ Data.Functor.Identity.Identity
                  @ GHC.Types.Char
                  Main.$s$fStreamByteStringmChar_$s$fStreamByteStringmChar_$cp1Stream
                  (Text.Parsec.Prim.$fStreamByteStringmChar_$cuncons
                     @ Data.Functor.Identity.Identity
                     Data.Functor.Identity.$fMonadIdentity) -}
1a0da550070f55e68f0af26820a4c28f
  $s$fStreamByteStringmChar_$s$fStreamByteStringmChar_$cp1Stream ::
    GHC.Base.Monad Data.Functor.Identity.Identity
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Data.Functor.Identity.$fMonadIdentity -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
1652cf856e5077b0690035926b462689
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
a5f1fe225981fc5f668dd074b7368432
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case (Text.Parsec.Prim.runPT
                         @ Data.ByteString.Internal.ByteString
                         @ Data.Functor.Identity.Identity
                         @ GHC.Types.Char
                         @ ()
                         @ Expr.Expr
                         Main.$s$fStreamByteStringmChar
                         Parser.expr1
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <Data.ByteString.Internal.ByteString>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <Expr.Expr>_R))
                         GHC.Tuple.()
                         (GHC.Types.[] @ GHC.Types.Char)
                         Main.main2)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Data.Either.Either
                              Text.Parsec.Error.ParseError Expr.Expr>_R) of wild {
                   Data.Either.Left parseError
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (Text.Parsec.Error.$fShowParseError_$cshow parseError)
                        GHC.Types.True
                        eta
                   Data.Either.Right parsedExpr
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (Expr.$fShowExpr_$cshow parsedExpr)
                        GHC.Types.True
                        eta }) -}
744d1d74d9e12139a3470fb0a73f912a
  main2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "````skk`ii``skk"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
208aeebc41d2a0fe112a4ac3581286b6
  main3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
"SPEC/Main $fStreamByteStringmChar @ Identity" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                             Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStreamByteStringmChar @ Data.Functor.Identity.Identity
                                           $dMonad
  = Main.$s$fStreamByteStringmChar
"SPEC/Main $fStreamByteStringmChar_$cp1Stream @ Identity" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                                        Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStreamByteStringmChar_$cp1Stream @ Data.Functor.Identity.Identity
                                                      $dMonad
  = Main.$s$fStreamByteStringmChar_$s$fStreamByteStringmChar_$cp1Stream
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

